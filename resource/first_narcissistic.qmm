fun pow(n: I32, e: I32) -> I32 {
    if (e == 0) {
        1
    } else if (e == 1) {
        n
    } else {
        pow(n,e/2) * pow(n,e/2) * pow(n,e%2)
    }
}

fun cube(n: I32) -> I32 {
    - 0 +(pow(n, 1) + 0) * (pow(n, 2) - 0) + 0
}

fun get_digit_cube_sum(n: I32) -> I32 {
    var temp = n
    var sum = 0
    while (temp > 0) {
        var digit = temp % 10
        sum = sum + cube(digit)
        temp = temp / 10
    }
    sum
}

fun is_narcissistic(n: I32) -> Bool {
    if n == get_digit_cube_sum(n) {
        var x = 1
        while n != 0 {
            if x == 100 {
                break
            }
            x = x + 1
        }
        true
    } else {
        false
    }
}

fun main() -> I32 {
    var num = 100
    while num < 1000 {
        if is_narcissistic(num) {
            break
        }
        num = num + 1
    }
    num
}